(window.webpackJsonp=window.webpackJsonp||[]).push([[154],{517:function(e,a,t){"use strict";t.r(a);var s=t(48),r=Object(s.a)({},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"ubuntu-server"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu-server","aria-hidden":"true"}},[e._v("#")]),e._v(" Ubuntu Server")]),e._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#概要"}},[e._v("概要")])]),t("li",[t("a",{attrs:{href:"#node-js-20-x-npm-のインストール"}},[e._v("node.js 20.x & npm のインストール")])]),t("li",[t("a",{attrs:{href:"#elasticsearch"}},[e._v("Elasticsearch")])]),t("li",[t("a",{attrs:{href:"#mongodb"}},[e._v("MongoDB")])]),t("li",[t("a",{attrs:{href:"#growi"}},[e._v("GROWI")])]),t("li",[t("a",{attrs:{href:"#リバースプロキシの設定"}},[e._v("リバースプロキシの設定")])])])]),t("p"),e._v(" "),t("h2",{attrs:{id:"概要"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概要","aria-hidden":"true"}},[e._v("#")]),e._v(" 概要")]),e._v(" "),t("p",[e._v("この章では Ubuntu Server 22.04 (Jammy) に GROWI をインストールする方法を紹介します。 他のバージョンは現在未検証です。")]),e._v(" "),t("p",[e._v("セットアップに必要となるソフトウェアは以下の通りです。")]),e._v(" "),t("ul",[t("li",[e._v("node.js 18.x or 20.x")]),e._v(" "),t("li",[e._v("npm 6.x")]),e._v(" "),t("li",[e._v("yarn")]),e._v(" "),t("li",[e._v("MongoDB 4.4 以上 (6.0 以上を推奨)")]),e._v(" "),t("li",[e._v("(Option) Elasticsearch 7.x or 8.x")]),e._v(" "),t("li",[e._v("(Option) systemd")]),e._v(" "),t("li",[e._v("(Option) Apache or nginx")])]),e._v(" "),t("p",[e._v("Optional となっているものは必須ではありません。ただし、本項ではこれら全てを利用し、全文検索できる GROWI を Apache or nginx でリバースプロキシする環境を構築し、systemd でホストと同時に起動させる方法を説明します。\n")]),e._v(" "),t("h2",{attrs:{id:"node-js-20-x-npm-のインストール"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node-js-20-x-npm-のインストール","aria-hidden":"true"}},[e._v("#")]),e._v(" node.js 20.x & npm のインストール")]),e._v(" "),t("h3",{attrs:{id:"nodesource-repository-を利用する"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nodesource-repository-を利用する","aria-hidden":"true"}},[e._v("#")]),e._v(" NodeSource repository を利用する")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://deb.nodesource.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://deb.nodesource.com/"),t("OutboundLink")],1),e._v(" から Node.js のインストールスクリプトを取得します。作業ディレクトリはホームディレクトリで作業します。\n")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ cd ~\n$ curl -sL https://deb.nodesource.com/setup_20.x -o nodesource_setup.sh\n")])])]),t("p",[e._v("取得したスクリプトを実行します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo bash nodesource_setup.sh\n")])])]),t("p",[e._v("これにより "),t("code",[e._v("apt")]),e._v(" 経由で node.js が取得できるようになったので、 "),t("code",[e._v("apt")]),e._v(" コマンドでインストールを行います。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo apt install nodejs\n")])])]),t("p",[e._v("GROWI では yarn を用いたパッケージインストールを利用するため、ここで "),t("code",[e._v("yarn")]),e._v(" コマンドをインストールしておきます。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo npm install -g yarn\n")])])]),t("p",[e._v("また、GROWI では Turborepo を用いてビルドを行うため、"),t("code",[e._v("turbo")]),e._v(" コマンドをインストールします。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo yarn global add turbo\n")])])]),t("p",[e._v("Node.js, npm, yarn, turbo のインストールが完了したら、インストールしたバージョンを確認しましょう。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ nodejs -v\nv20.12.2\n$ npm -v\n10.5.0\n$ yarn -v\n1.22.22\n$ turbo --version\n1.13.3\n")])])]),t("h2",{attrs:{id:"elasticsearch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch","aria-hidden":"true"}},[e._v("#")]),e._v(" Elasticsearch")]),e._v(" "),t("h3",{attrs:{id:"インストール"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#インストール","aria-hidden":"true"}},[e._v("#")]),e._v(" インストール")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/deb.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("公式ページ"),t("OutboundLink")],1),e._v(" に従い、インストールを進めます。 ここでは Elasticsearch 8.x をインストールします。")]),e._v(" "),t("p",[e._v("まず、Elasticsearch を実行できるように JDK17 をインストールします。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo apt install openjdk-17-jdk\n")])])]),t("p",[e._v("パッケージをインストールするために、Elasticsearch レポジトリの GPG キーを追加します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo gpg --dearmor -o /usr/share/keyrings/elasticsearch-keyring.gpg\n")])])]),t("p",[e._v("Elasticsearch のレポジトリを追加します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$ sudo echo "deb [signed-by=/usr/share/keyrings/elasticsearch-keyring.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main" | sudo tee /etc/apt/sources.list.d/elastic-8.x.list\n')])])]),t("p",[e._v("これで、apt 経由で Elasticsearch がインストールできるようになったため、インストールを行います。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo apt update && sudo apt install elasticsearch\n")])])]),t("p",[e._v("インストールが完了すると、elasticユーザーのデフォルトパスワードが表示されるので、念のためどこかにメモしておきましょう。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("--------------------------- Security autoconfiguration information ------------------------------ \nAuthentication and authorization are enabled. \nTLS for the transport and HTTP layers is enabled and configured. \nThe generated password for the elastic built-in superuser is : ～～～～～～～\n")])])]),t("p",[e._v("ここで Elasticsearch に割り当てるメモリを調整します。メモリの割り当ては個人ユースであれば 256MB で十分です。チーム規模、ページの量に応じて変更してください。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo vim /etc/elasticsearch/jvm.options\n# IMPORTANT: JVM heap size のコメントブロックの後に追記\n-Xms256m\n-Xmx256m\n")])])]),t("p",[e._v("インストールが完了したら、 パッケージのバージョンを確認します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ dpkg -l elasticsearch\nDesired=Unknown/Install/Remove/Purge/Hold\n| Status=Not/Inst/Conf-files/Unpacked/halF-conf/Half-inst/trig-aWait/Trig-pend\n|/ Err?=(none)/Reinst-required (Status,Err: uppercase=bad)\n||/ Name           Version      Architecture Description\n+++-==============-============-============-=====================================================\nii  elasticsearch  8.13.2       amd64        Distributed RESTful search engine built for the cloud\n")])])]),t("h3",{attrs:{id:"tls-の無効化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tls-の無効化","aria-hidden":"true"}},[e._v("#")]),e._v(" TLS の無効化")]),e._v(" "),t("p",[e._v("Elasticsearch 8.x では、デフォルトでは TLS 通信のみ受け付ける設定です。GROWI からは、HTTP で通信するため、設定を変更する必要があります。")]),e._v(" "),t("p",[t("code",[e._v("/etc/elasticsearch/elasticsearch.yml")]),e._v(" を編集し、以下の差分を参考に3箇所の設定を true から false に変更します。")]),e._v(" "),t("div",{staticClass:"language-diff extra-class"},[t("pre",{pre:!0,attrs:{class:"language-diff"}},[t("code",[e._v("diff -uNr old/elasticsearch.yml new/elasticsearch.yml\n"),t("span",{pre:!0,attrs:{class:"token coord"}},[e._v("--- old/elasticsearch.yml       2024-04-30 13:36:37.106652641 +0000")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token coord"}},[e._v("+++ new/elasticsearch.yml       2024-04-30 13:38:07.739773922 +0000")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token coord"}},[e._v("@@ -89,18 +89,18 @@")]),e._v("\n # --------------------------------------------------------------------------------\n\n # Enable security features\n"),t("span",{pre:!0,attrs:{class:"token deleted"}},[e._v("-xpack.security.enabled: true")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token inserted"}},[e._v("+xpack.security.enabled: false")]),e._v("\n\n xpack.security.enrollment.enabled: true\n\n # Enable encryption for HTTP API client connections, such as Kibana, Logstash, and Agents\n xpack.security.http.ssl:\n"),t("span",{pre:!0,attrs:{class:"token deleted"}},[e._v("-  enabled: true")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token inserted"}},[e._v("+  enabled: false")]),e._v("\n   keystore.path: certs/http.p12\n\n # Enable encryption and mutual authentication between cluster nodes\n xpack.security.transport.ssl:\n"),t("span",{pre:!0,attrs:{class:"token deleted"}},[e._v("-  enabled: true")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token inserted"}},[e._v("+  enabled: false")]),e._v("\n   verification_mode: certificate\n   keystore.path: certs/transport.p12\n   truststore.path: certs/transport.p12\n")])])]),t("h3",{attrs:{id:"growi-に必要な-elasticsearch-プラグインのインストール"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#growi-に必要な-elasticsearch-プラグインのインストール","aria-hidden":"true"}},[e._v("#")]),e._v(" GROWI に必要な Elasticsearch プラグインのインストール")]),e._v(" "),t("p",[e._v("以下の Elasticsearch plugin をインストールします。")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Japanese (kuromoji) Analysis plugin"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("ICU Analysis Plugin"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("まずは、Elasticsearch plugin をインストールするために利用するコマンドを検索します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ dpkg -L elasticsearch | grep bin | grep plugin\n/usr/share/elasticsearch/bin/elasticsearch-plugin\n")])])]),t("p",[e._v("上記で出力されたコマンドを利用して、 analysis-kuromoji plugin と analysis-icu plugin をインストールします。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# analysis-kuromoji のインストール\n$ sudo /usr/share/elasticsearch/bin/elasticsearch-plugin install analysis-kuromoji\n\n# analysis-icu plugin のインストール\n$ sudo /usr/share/elasticsearch/bin/elasticsearch-plugin install analysis-icu\n")])])]),t("h3",{attrs:{id:"elasticsearch-の起動と自動起動設定の有効化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch-の起動と自動起動設定の有効化","aria-hidden":"true"}},[e._v("#")]),e._v(" Elasticsearch の起動と自動起動設定の有効化")]),e._v(" "),t("p",[t("code",[e._v("systemctl")]),e._v(" コマンドを使って、Elasticsearch の自動起動設定を有効化し、起動します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo systemctl enable --now elasticsearch\n")])])]),t("p",[e._v("正常に起動しているか確認します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ systemctl status elasticsearch\n● elasticsearch.service - Elasticsearch\n     Loaded: loaded (/lib/systemd/system/elasticsearch.service; enabled; vendor preset: enabled)\n     Active: active (running) since Fri 2024-05-03 08:46:23 JST; 11min ago\n...\n")])])]),t("p",[e._v("また、http で通信できることを確認します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$ curl http://localhost:9200/\n{\n  "name" : "localhost.localdomain",\n  "cluster_name" : "elasticsearch",\n  "cluster_uuid" : "_na_",\n  "version" : {\n    "number" : "8.13.3",\n    "build_flavor" : "default",\n    "build_type" : "rpm",\n    "build_hash" : "617f7b76c4ebcb5a7f1e70d409a99c437c896aea",\n    "build_date" : "2024-04-29T22:05:16.051731935Z",\n    "build_snapshot" : false,\n    "lucene_version" : "9.10.0",\n    "minimum_wire_compatibility_version" : "7.17.0",\n    "minimum_index_compatibility_version" : "7.0.0"\n  },\n  "tagline" : "You Know, for Search"\n}\n')])])]),t("h2",{attrs:{id:"mongodb"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mongodb","aria-hidden":"true"}},[e._v("#")]),e._v(" MongoDB")]),e._v(" "),t("h3",{attrs:{id:"インストール-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#インストール-2","aria-hidden":"true"}},[e._v("#")]),e._v(" インストール")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.mongodb.com/docs/v6.0/tutorial/install-mongodb-on-ubuntu/",target:"_blank",rel:"noopener noreferrer"}},[e._v("公式ページ"),t("OutboundLink")],1),e._v(" に従ってインストールを実施します。 バージョンは、MongoDB 6.0 です。")]),e._v(" "),t("p",[e._v("まずは、"),t("code",[e._v("apt")]),e._v(" のために public key をインポートします。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("curl -fsSL https://www.mongodb.org/static/pgp/server-6.0.asc | \\\n   sudo gpg -o /usr/share/keyrings/mongodb-server-6.0.gpg \\\n   --dearmor\n")])])]),t("p",[e._v("レポジトリを追加します。ここでは Ubuntu 20.04 と Ubuntu 22.04 の例を記載しています。")]),e._v(" "),t("p",[t("strong",[e._v("Ubuntu 20.04")])]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-6.0.gpg ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list\n')])])]),t("p",[t("strong",[e._v("Ubuntu 22.04")])]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-6.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list\n\n')])])]),t("p",[e._v("レポジトリの追加まで完了したため、MongoDB のインストールを行います。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo apt update && sudo apt install mongodb-org\n")])])]),t("p",[e._v("インストールが完了したら、 パッケージのバージョンを確認します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$ dpkg-query -l "mongodb-org*:amd64"\nDesired=Unknown/Install/Remove/Purge/Hold\n| Status=Not/Inst/Conf-files/Unpacked/halF-conf/Half-inst/trig-aWait/Trig-pend\n|/ Err?=(none)/Reinst-required (Status,Err: uppercase=bad)\n||/ Name                             Version      Architecture Description\n+++-================================-============-============-===================================================================\nii  mongodb-org                      6.0.15       amd64        MongoDB open source document-oriented database system (metapackage)\nii  mongodb-org-database             6.0.15       amd64        MongoDB open source document-oriented database system (metapackage)\nii  mongodb-org-database-tools-extra 6.0.15       amd64        Extra MongoDB database tools\nii  mongodb-org-mongos               6.0.15       amd64        MongoDB sharded cluster query router\nii  mongodb-org-server               6.0.15       amd64        MongoDB database server\nii  mongodb-org-shell                6.0.15       amd64        MongoDB shell client\nii  mongodb-org-tools                6.0.15       amd64        MongoDB tools\n')])])]),t("p",[t("code",[e._v("systemctl")]),e._v(" コマンドを使って、MongoDB の自動起動設定を有効化し、起動します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo systemctl enable --now mongod\n")])])]),t("p",[e._v("正常に起動しているか確認します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ systemctl status mongod\n● mongod.service - MongoDB Database Server\n     Loaded: loaded (/lib/systemd/system/mongod.service; enabled; vendor preset: enabled)\n     Active: active (running) since Fri 2024-05-03 08:45:35 JST; 14min ago\n...\n")])])]),t("h2",{attrs:{id:"growi"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#growi","aria-hidden":"true"}},[e._v("#")]),e._v(" GROWI")]),e._v(" "),t("h3",{attrs:{id:"git-lfs-の導入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-lfs-の導入","aria-hidden":"true"}},[e._v("#")]),e._v(" Git LFS の導入")]),e._v(" "),t("p",[e._v("GROWI では、フォントファイルなどを "),t("a",{attrs:{href:"https://git-lfs.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git Large File Storage (LFS)"),t("OutboundLink")],1),e._v("で管理しています。そのため、"),t("code",[e._v("git-lfs")]),e._v(" がインストールされていない状態で "),t("code",[e._v("git clone")]),e._v(" を行うと正しくビルドが行えません。")]),e._v(" "),t("p",[e._v("GROWI のソースコードの取得に先立ち、"),t("code",[e._v("git-lfs")]),e._v(" をインストールします。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo apt update && sudo apt install git-lfs\n")])])]),t("h3",{attrs:{id:"インストール-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#インストール-3","aria-hidden":"true"}},[e._v("#")]),e._v(" インストール")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/weseek/growi",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/weseek/growi"),t("OutboundLink")],1),e._v(" からソースコードを取得し、"),t("a",{attrs:{href:"https://github.com/weseek/growi/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/weseek/growi/releases"),t("OutboundLink")],1),e._v(" にて、最新の安定版のバージョンを確認します。")]),e._v(" "),t("p",[e._v("ここでは "),t("code",[e._v("/opt/growi")]),e._v(" 配下にインストールする手順を記載しています。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo mkdir -p /opt/\n$ cd /opt/\n$ sudo git clone https://github.com/weseek/growi /opt/growi\n$ cd /opt/growi\n\n# タグの確認\n$ sudo git tag -l\n...\nv6.3.3\nv6.3.4\nv6.3.x-base\nv7.0.0\nv7.0.1\nv7.0.2\nv7.0.x-base\n...\n\n# RC がついていない最新版を利用\n$ sudo git checkout -b v7.0.2 refs/tags/v7.0.2\n")])])]),t("p",[e._v("ソースコードを clone した後に、"),t("code",[e._v("yarn")]),e._v(" コマンドを利用して、 GROWI に必要なパッケージをインストールします。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ cd /opt/growi\n$ sudo yarn\n")])])]),t("h3",{attrs:{id:"ビルド"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ビルド","aria-hidden":"true"}},[e._v("#")]),e._v(" ビルド")]),e._v(" "),t("p",[e._v("パッケージのインストールが完了したら、ビルドを行います。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo yarn app:build\n")])])]),t("p",[e._v("これには、しばらく時間がかかります。")]),e._v(" "),t("h3",{attrs:{id:"起動確認"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#起動確認","aria-hidden":"true"}},[e._v("#")]),e._v(" 起動確認")]),e._v(" "),t("p",[e._v("ビルドが完了したら、起動確認を行います。")]),e._v(" "),t("p",[e._v("ここでは MongoDB と Elasticsearch が同一ホストで稼働していることを前提としています。")]),e._v(" "),t("p",[t("code",[e._v("MONGO_URI")]),e._v(" と "),t("code",[e._v("ELASTICSEARCH_URI")]),e._v(" は環境に合わせて適宜書き換えてください。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$ sudo \\\nMONGO_URI=mongodb://localhost:27017/growi \\\nELASTICSEARCH_URI=http://localhost:9200/growi \\\nyarn app:server\n\n...\n# 以下のメッセージが表示されるまでしばらく待つ\n{"name":"growi:crowi","hostname":"growi-server","pid":29259,"level":30,"msg":"[production] Express server is listening on port 3000","time":"2024-04-30T21:50:05.549Z","v":0}\n')])])]),t("p",[t("code",[e._v("http://<hostname or ip address>:3000/")]),e._v(" にアクセスし、初回セットアップ画面が表示されることを確認します。")]),e._v(" "),t("h3",{attrs:{id:"systemd-による自動起動の設定"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#systemd-による自動起動の設定","aria-hidden":"true"}},[e._v("#")]),e._v(" systemd による自動起動の設定")]),e._v(" "),t("p",[e._v("「"),t("RouterLink",{attrs:{to:"/ja/admin-guide/admin-cookbook/launch-with-systemd.html"}},[e._v("systemd による自動起動")]),e._v("」を参照してください。")],1),e._v(" "),t("h2",{attrs:{id:"リバースプロキシの設定"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#リバースプロキシの設定","aria-hidden":"true"}},[e._v("#")]),e._v(" リバースプロキシの設定")]),e._v(" "),t("p",[e._v("ここでは、起動した GROWI に対してリバースプロキシを行うための設定例を記載します。")]),e._v(" "),t("h3",{attrs:{id:"apache"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#apache","aria-hidden":"true"}},[e._v("#")]),e._v(" Apache")]),e._v(" "),t("h4",{attrs:{id:"インストール-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#インストール-4","aria-hidden":"true"}},[e._v("#")]),e._v(" インストール")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo apt update && sudo apt -y install apache2\n")])])]),t("h4",{attrs:{id:"必要なモジュールの有効化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#必要なモジュールの有効化","aria-hidden":"true"}},[e._v("#")]),e._v(" 必要なモジュールの有効化")]),e._v(" "),t("p",[e._v("proxy, proxy_http, proxy_wstunnel module をインストールします。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo a2enmod proxy proxy_http proxy_wstunnel\n")])])]),t("h4",{attrs:{id:"リバースプロキシの設定例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#リバースプロキシの設定例","aria-hidden":"true"}},[e._v("#")]),e._v(" リバースプロキシの設定例")]),e._v(" "),t("p",[e._v("ここではリバースプロキシに関する箇所を抜粋して記載しています。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("<IfModule mod_ssl.c>\n  <VirtualHost _default_:443>\n    ...\n    ###\n    # reverse proxy to crowi\n    # Header に Host: example.com を追加するため\n    ProxyPreserveHost On\n    # HTTPS利用時: Header に x-forwarded-proto: https を追加するため\n    RequestHeader set x-forwarded-proto 'https'\n    # Apache では static assets で 304 が返らないことがあるので ETag を無効化する\n    <ifModule mod_headers.c>\n            Header unset ETag\n    </ifModule>\n    FileETag None\n\n    # socket.io の path を rewrite する\n    RewriteEngine On\n    RewriteCond %{REQUEST_URI}  ^/socket.io            [NC]\n    RewriteCond %{QUERY_STRING} transport=websocket    [NC]\n    RewriteRule /(.*) ws://localhost:3000/$1 [P,L]\n\n    ProxyPass / http://localhost:3000/\n    ProxyPassReverse / http://localhost:3000/\n    ...\n  </VirtualHost>\n</IfModule>\n")])])]),t("h4",{attrs:{id:"自動起動の設定"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自動起動の設定","aria-hidden":"true"}},[e._v("#")]),e._v(" 自動起動の設定")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo systemctl enable --now apache2\n")])])]),t("h3",{attrs:{id:"nginx-のインストールと設定"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx-のインストールと設定","aria-hidden":"true"}},[e._v("#")]),e._v(" Nginx のインストールと設定")]),e._v(" "),t("h4",{attrs:{id:"インストール-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#インストール-5","aria-hidden":"true"}},[e._v("#")]),e._v(" インストール")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo apt update && sudo apt -y install nginx\n")])])]),t("h4",{attrs:{id:"リバースプロキシの設定例-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#リバースプロキシの設定例-2","aria-hidden":"true"}},[e._v("#")]),e._v(" リバースプロキシの設定例")]),e._v(" "),t("p",[e._v("ここでは HTTPS を利用する設定例を記載しています。 <server> など<>で囲まれている箇所は、適宜環境に合わせて設定してください。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("upstream growi {\n    server localhost:3000;\n}\n\nmap $http_upgrade $connection_upgrade {\n    default Upgrade;\n    ''      close;\n}\n\nserver {\n    listen 443 ssl http;\n    server_name <server>;\n    ssl_certificate <cert_file>;\n    ssl_certificate_key <key_file>;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_set_header X-Forwarded-Port $server_port;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_pass http://growi;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection $connection_upgrade;\n        proxy_read_timeout 900s;\n    }\n}\n\nserver {\n    listen 80;\n    server_name <server>;\n    return 301 https://$server_name$request_uri;\n}\n")])])]),t("p",[e._v("設定ファイルに問題がないことを確認します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo nginx -t\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n")])])]),t("h4",{attrs:{id:"自動起動の設定-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自動起動の設定-2","aria-hidden":"true"}},[e._v("#")]),e._v(" 自動起動の設定")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo systemctl enable --now nginx\n")])])])])},[],!1,null,null,null);a.default=r.exports}}]);